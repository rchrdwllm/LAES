/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import java.awt.Font;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;
import utils.FontLoader;
import utils.WrapLayout;
import classes.Database;
import classes.ProductPanel;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author rwill
 */
public class Main extends javax.swing.JFrame {
    private final ArrayList<ProductPanel> products;
    
    FontLoader fontLoader = new FontLoader();
    Font inter;
    Font puritanBold;
    Font puritanBoldSmall;

    /**
     * Creates new form Reservations
     */
    public Main() {
        setFonts();
        initComponents();
        setFrameIcon();
        setFirstPanel();
        fetchReservations();
        fetchCustomers();
        setupReservationsSearch();
        setupCustomersSearch();
        
        products = new ArrayList<>();
        setupProducts();
        
        postInitForInventory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabsBtnGroup = new javax.swing.ButtonGroup();
        sidePnl = new javax.swing.JPanel();
        reservationsBtn = new javax.swing.JButton();
        customersBtn = new javax.swing.JButton();
        inventoryBtn = new javax.swing.JButton();
        aboutBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        logoLabel = new javax.swing.JLabel();
        mainPnl = new javax.swing.JPanel();
        reservationsPnl = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        searchReservations = new javax.swing.JTextField();
        addReservationBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationsTbl = new javax.swing.JTable();
        reservationsTbl.getTableHeader().setFont(inter);
        customersPnl = new javax.swing.JPanel();
        aboutTitleLabel1 = new javax.swing.JLabel();
        searchCustomers = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        customersTbl = new javax.swing.JTable();
        reservationsTbl.getTableHeader().setFont(inter);
        aboutPnl = new javax.swing.JPanel();
        aboutTitle = new javax.swing.JPanel();
        aboutDesc = new javax.swing.JPanel();
        aboutHead1 = new javax.swing.JLabel();
        aboutDescText = new javax.swing.JLabel();
        aboutPrevimg1 = new javax.swing.JLabel();
        aboutPrevimg2 = new javax.swing.JLabel();
        aboutTitleLabel = new javax.swing.JLabel();
        inventoryPnl = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        searchInventory = new javax.swing.JTextField();
        addItemBtn = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        inventoryScrollableArea = new javax.swing.JScrollPane();
        inventoryDisplayPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lath's Auto-Electrical Shop");

        sidePnl.setBackground(new java.awt.Color(255, 255, 255));
        sidePnl.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.MatteBorder(0, 0, 0, 1, new java.awt.Color(218, 218, 218))
            , javax.swing.BorderFactory.createEmptyBorder(32, 32, 32, 32)));

    reservationsBtn.setBackground(new java.awt.Color(248, 248, 248));
    reservationsBtn.setFont(inter);
    reservationsBtn.setForeground(new java.awt.Color(35, 35, 35));
    reservationsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/ClipboardCheckOutline.png"))); // NOI18N
    reservationsBtn.setText("  Reservations");
    reservationsBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    reservationsBtn.setBorderPainted(false);
    reservationsBtn.setFocusPainted(false);
    reservationsBtn.setFocusable(false);
    reservationsBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    reservationsBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            reservationsBtnActionPerformed(evt);
        }
    });

    customersBtn.setFont(inter);
    customersBtn.setForeground(new java.awt.Color(35, 35, 35));
    customersBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/UserOutline.png"))); // NOI18N
    customersBtn.setText("  Customers");
    customersBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    customersBtn.setBorderPainted(false);
    customersBtn.setFocusPainted(false);
    customersBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    customersBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            customersBtnActionPerformed(evt);
        }
    });

    inventoryBtn.setFont(inter);
    inventoryBtn.setForeground(new java.awt.Color(35, 35, 35));
    inventoryBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/ArchiveOutline.png"))); // NOI18N
    inventoryBtn.setText("  Inventory");
    inventoryBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    inventoryBtn.setBorderPainted(false);
    inventoryBtn.setFocusPainted(false);
    inventoryBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    inventoryBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            inventoryBtnActionPerformed(evt);
        }
    });

    aboutBtn.setFont(inter);
    aboutBtn.setForeground(new java.awt.Color(35, 35, 35));
    aboutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/ExclamationCircleOutline.png"))); // NOI18N
    aboutBtn.setText("  About");
    aboutBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    aboutBtn.setBorderPainted(false);
    aboutBtn.setFocusPainted(false);
    aboutBtn.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    aboutBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            aboutBtnActionPerformed(evt);
        }
    });

    logoutBtn.setBackground(new java.awt.Color(40, 40, 40));
    logoutBtn.setFont(inter);
    logoutBtn.setForeground(new java.awt.Color(248, 248, 248));
    logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/LogoutOutline.png"))); // NOI18N
    logoutBtn.setText("  Log out");
    logoutBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    logoutBtn.setBorderPainted(false);
    logoutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    logoutBtn.setFocusPainted(false);
    logoutBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            logoutBtnActionPerformed(evt);
        }
    });

    logoLabel.setIcon(new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("../assets/logo.png")).getImage().getScaledInstance(167, 128, Image.SCALE_SMOOTH)));
    logoLabel.setMaximumSize(new java.awt.Dimension(167, 128));
    logoLabel.setMinimumSize(new java.awt.Dimension(167, 128));

    javax.swing.GroupLayout sidePnlLayout = new javax.swing.GroupLayout(sidePnl);
    sidePnl.setLayout(sidePnlLayout);
    sidePnlLayout.setHorizontalGroup(
        sidePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(sidePnlLayout.createSequentialGroup()
            .addGroup(sidePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(logoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reservationsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addComponent(customersBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inventoryBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aboutBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    sidePnlLayout.setVerticalGroup(
        sidePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(sidePnlLayout.createSequentialGroup()
            .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(reservationsBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(customersBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(inventoryBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(aboutBtn)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE)
            .addComponent(logoutBtn))
    );

    getContentPane().add(sidePnl, java.awt.BorderLayout.WEST);

    mainPnl.setLayout(new java.awt.CardLayout());

    reservationsPnl.setBackground(new java.awt.Color(255, 255, 255));
    reservationsPnl.setBorder(javax.swing.BorderFactory.createEmptyBorder(32, 64, 32, 64));

    jLabel2.setFont(puritanBold);
    jLabel2.setForeground(new java.awt.Color(35, 35, 35));
    jLabel2.setText("RESERVATIONS");

    searchReservations.setBackground(new java.awt.Color(248, 248, 248));
    searchReservations.setFont(inter);
    searchReservations.setForeground(new java.awt.Color(129, 129, 129));
    searchReservations.setText("Search reservations");
    searchReservations.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 218, 218)), javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16)));
    searchReservations.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchReservationsFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchReservationsFocusLost(evt);
        }
    });

    addReservationBtn.setBackground(new java.awt.Color(40, 40, 40));
    addReservationBtn.setFont(inter);
    addReservationBtn.setForeground(new java.awt.Color(248, 248, 248));
    addReservationBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Plus.png"))); // NOI18N
    addReservationBtn.setText("  Add new reservation");
    addReservationBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    addReservationBtn.setBorderPainted(false);
    addReservationBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    addReservationBtn.setFocusPainted(false);
    addReservationBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addReservationBtnActionPerformed(evt);
        }
    });

    reservationsTbl.setFont(inter);
    reservationsTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, "Richard William Flores", "10/22/2023", "09764753058", "Alternator repair"},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Reservation ID", "Name", "Date", "Contact number", "Service"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    reservationsTbl.setOpaque(false);
    reservationsTbl.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            reservationsTblMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(reservationsTbl);

    javax.swing.GroupLayout reservationsPnlLayout = new javax.swing.GroupLayout(reservationsPnl);
    reservationsPnl.setLayout(reservationsPnlLayout);
    reservationsPnlLayout.setHorizontalGroup(
        reservationsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reservationsPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(reservationsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                .addGroup(reservationsPnlLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(reservationsPnlLayout.createSequentialGroup()
                    .addComponent(searchReservations)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(addReservationBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    reservationsPnlLayout.setVerticalGroup(
        reservationsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(reservationsPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel2)
            .addGap(18, 18, 18)
            .addGroup(reservationsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchReservations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(addReservationBtn))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    mainPnl.add(reservationsPnl, "card3");

    customersPnl.setBackground(new java.awt.Color(255, 255, 255));
    customersPnl.setBorder(javax.swing.BorderFactory.createEmptyBorder(32, 64, 32, 64));

    aboutTitleLabel1.setFont(puritanBold);
    aboutTitleLabel1.setText("CUSTOMERS");

    searchCustomers.setBackground(new java.awt.Color(248, 248, 248));
    searchCustomers.setFont(inter);
    searchCustomers.setForeground(new java.awt.Color(129, 129, 129));
    searchCustomers.setText("Search customers");
    searchCustomers.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 218, 218)), javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16)));
    searchCustomers.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchCustomersFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchCustomersFocusLost(evt);
        }
    });
    searchCustomers.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchCustomersActionPerformed(evt);
        }
    });

    customersTbl.setFont(inter);
    customersTbl.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, "Richard William Flores", "09764753058", "Alternator repair"},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Customer ID", "Name", "Contact number", "Services"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    customersTbl.setOpaque(false);
    jScrollPane2.setViewportView(customersTbl);

    javax.swing.GroupLayout customersPnlLayout = new javax.swing.GroupLayout(customersPnl);
    customersPnl.setLayout(customersPnlLayout);
    customersPnlLayout.setHorizontalGroup(
        customersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customersPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(customersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(searchCustomers)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, customersPnlLayout.createSequentialGroup()
                    .addComponent(aboutTitleLabel1)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE))
            .addContainerGap())
    );
    customersPnlLayout.setVerticalGroup(
        customersPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(customersPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(aboutTitleLabel1)
            .addGap(18, 18, 18)
            .addComponent(searchCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(52, Short.MAX_VALUE))
    );

    mainPnl.add(customersPnl, "card2");

    aboutPnl.setBackground(new java.awt.Color(255, 255, 255));
    aboutPnl.setBorder(javax.swing.BorderFactory.createEmptyBorder(32, 64, 32, 64));

    aboutTitle.setBackground(new java.awt.Color(255, 255, 255));

    javax.swing.GroupLayout aboutTitleLayout = new javax.swing.GroupLayout(aboutTitle);
    aboutTitle.setLayout(aboutTitleLayout);
    aboutTitleLayout.setHorizontalGroup(
        aboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 0, Short.MAX_VALUE)
    );
    aboutTitleLayout.setVerticalGroup(
        aboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 0, Short.MAX_VALUE)
    );

    aboutDesc.setBackground(new java.awt.Color(255, 255, 255));

    aboutHead1.setFont(puritanBoldSmall);
    aboutHead1.setText("<html>LATH’S AUTO-ELECTRICAL SHOP - YOUR TRUSTED <br>AUTO-ELECTRICAL SOLUTION!</html>");

    aboutDescText.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
    aboutDescText.setForeground(new java.awt.Color(102, 102, 102));
    aboutDescText.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    aboutDescText.setText("<html>At Lath’s Auto-Electrical Shop, we pride ourselves on being your one-stop destination for all things auto-electrical. With a passion for excellence and a commitment to customer satisfaction, we have been serving the automotive community in the Philippines since 2009.<html>");
    aboutDescText.setToolTipText("");
    aboutDescText.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    aboutDescText.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    aboutPrevimg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/aboutprev1.png"))); // NOI18N

    aboutPrevimg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/aboutprev2.png"))); // NOI18N

    javax.swing.GroupLayout aboutDescLayout = new javax.swing.GroupLayout(aboutDesc);
    aboutDesc.setLayout(aboutDescLayout);
    aboutDescLayout.setHorizontalGroup(
        aboutDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(aboutDescLayout.createSequentialGroup()
            .addGroup(aboutDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(aboutHead1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(aboutDescLayout.createSequentialGroup()
                    .addGroup(aboutDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(aboutDescLayout.createSequentialGroup()
                            .addComponent(aboutPrevimg1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)
                            .addComponent(aboutPrevimg2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(aboutDescText, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    aboutDescLayout.setVerticalGroup(
        aboutDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(aboutDescLayout.createSequentialGroup()
            .addComponent(aboutHead1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(aboutDescText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(aboutDescLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(aboutPrevimg1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(aboutPrevimg2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(116, Short.MAX_VALUE))
    );

    aboutTitleLabel.setFont(puritanBold);
    aboutTitleLabel.setText("ABOUT");

    javax.swing.GroupLayout aboutPnlLayout = new javax.swing.GroupLayout(aboutPnl);
    aboutPnl.setLayout(aboutPnlLayout);
    aboutPnlLayout.setHorizontalGroup(
        aboutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(aboutPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(aboutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aboutPnlLayout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(aboutTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(aboutPnlLayout.createSequentialGroup()
                    .addGroup(aboutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(aboutTitleLabel)
                        .addComponent(aboutDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE))))
    );
    aboutPnlLayout.setVerticalGroup(
        aboutPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(aboutPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(aboutTitleLabel)
            .addGap(18, 18, 18)
            .addComponent(aboutTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(aboutDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    mainPnl.add(aboutPnl, "card5");

    inventoryPnl.setBackground(new java.awt.Color(255, 255, 255));
    inventoryPnl.setBorder(javax.swing.BorderFactory.createEmptyBorder(32, 64, 32, 64));

    title.setFont(puritanBold);
    title.setForeground(new java.awt.Color(35, 35, 35));
    title.setText("INVENTORY");

    searchInventory.setBackground(new java.awt.Color(248, 248, 248));
    searchInventory.setFont(inter);
    searchInventory.setForeground(new java.awt.Color(129, 129, 129));
    searchInventory.setText("Search Inventory");
    searchInventory.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 218, 218)), javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16)));
    searchInventory.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            searchInventoryFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            searchInventoryFocusLost(evt);
        }
    });

    addItemBtn.setBackground(new java.awt.Color(40, 40, 40));
    addItemBtn.setFont(inter);
    addItemBtn.setForeground(new java.awt.Color(248, 248, 248));
    addItemBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Plus.png"))); // NOI18N
    addItemBtn.setText("Add New Item");
    addItemBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
    addItemBtn.setBorderPainted(false);
    addItemBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    addItemBtn.setFocusPainted(false);
    addItemBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addItemBtnActionPerformed(evt);
        }
    });

    inventoryScrollableArea.setBorder(null);
    inventoryScrollableArea.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            inventoryScrollableAreaMouseClicked(evt);
        }
    });
    inventoryScrollableArea.addComponentListener(new java.awt.event.ComponentAdapter() {
        public void componentShown(java.awt.event.ComponentEvent evt) {
            inventoryScrollableAreaComponentShown(evt);
        }
    });

    inventoryDisplayPanel.setBackground(new java.awt.Color(255, 255, 255));
    inventoryDisplayPanel.setDoubleBuffered(false);
    inventoryDisplayPanel.setOpaque(false);
    inventoryScrollableArea.setViewportView(inventoryDisplayPanel);

    javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
    contentPanel.setLayout(contentPanelLayout);
    contentPanelLayout.setHorizontalGroup(
        contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(contentPanelLayout.createSequentialGroup()
            .addGap(22, 22, 22)
            .addComponent(inventoryScrollableArea, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    contentPanelLayout.setVerticalGroup(
        contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentPanelLayout.createSequentialGroup()
            .addContainerGap(25, Short.MAX_VALUE)
            .addComponent(inventoryScrollableArea, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(20, 20, 20))
    );

    javax.swing.GroupLayout inventoryPnlLayout = new javax.swing.GroupLayout(inventoryPnl);
    inventoryPnl.setLayout(inventoryPnlLayout);
    inventoryPnlLayout.setHorizontalGroup(
        inventoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(inventoryPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(inventoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inventoryPnlLayout.createSequentialGroup()
                    .addComponent(title)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(inventoryPnlLayout.createSequentialGroup()
                    .addComponent(searchInventory, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(addItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(contentPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    inventoryPnlLayout.setVerticalGroup(
        inventoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(inventoryPnlLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(inventoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(searchInventory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(addItemBtn))
            .addGap(18, 18, 18)
            .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    mainPnl.add(inventoryPnl, "card5");

    getContentPane().add(mainPnl, java.awt.BorderLayout.CENTER);

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void fetchReservations() {
        try {
            String query = "SELECT * FROM laes.reservations ORDER BY date ASC";
            PreparedStatement pstmt = Database.sqlConnection.prepareStatement(query);
            
            ResultSet rs = pstmt.executeQuery();
            ResultSetMetaData rsMetaData = rs.getMetaData();
            
            int tableCount = rsMetaData.getColumnCount();
            
            DefaultTableModel recordTable = (DefaultTableModel) reservationsTbl.getModel();
            
            recordTable.setRowCount(0);
            
            while (rs.next()) {
                Vector columnData = new Vector();
                
                for (int i = 1; i < tableCount; i++) {
                    columnData.add(rs.getString("reservationId"));
                    columnData.add(rs.getString("name"));
                    columnData.add(rs.getString("date"));
                    columnData.add(rs.getString("contactNumber"));
                    columnData.add(rs.getString("typeOfService"));
                }
                
                recordTable.addRow(columnData);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    
    public void fetchCustomers() {
        try {
            String query = "SELECT * FROM laes.customers ORDER BY name ASC";
            PreparedStatement pstmt = Database.sqlConnection.prepareStatement(query);
            
            ResultSet rs = pstmt.executeQuery();
            ResultSetMetaData rsMetaData = rs.getMetaData();
            
            int tableCount = rsMetaData.getColumnCount();
            
            DefaultTableModel recordTable = (DefaultTableModel) customersTbl.getModel();
            
            recordTable.setRowCount(0);
            
            while (rs.next()) {
                Vector columnData = new Vector();
                
                for (int i = 1; i < tableCount; i++) {
                    columnData.add(rs.getString("customerId"));
                    columnData.add(rs.getString("name"));
                    columnData.add(rs.getString("contactNumber"));
                    columnData.add(rs.getString("services"));
                }
                
                recordTable.addRow(columnData);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }
    
    private void postInitForInventory() {
        inventoryDisplayPanel.setLayout(new WrapLayout());
    }
    
    private void setFonts() {
        inter = fontLoader.interRegular(12);
        puritanBold = fontLoader.puritanBold(44);
        puritanBoldSmall = fontLoader.puritanBold(32);
    }

    private void setFrameIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../assets/logo.png")));
    }
    
    private void setupReservationsSearch() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(reservationsTbl.getModel());
        
        reservationsTbl.setRowSorter(rowSorter);
        
        searchReservations.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = searchReservations.getText();

                if (!text.equals("Search reservations")) {
                    if (text.trim().length() == 0) {
                        rowSorter.setRowFilter(null);
                    } else {
                        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = searchReservations.getText();

                if (!text.equals("Search reservations")) {
                    if (text.trim().length() == 0) {
                        rowSorter.setRowFilter(null);
                    } else {
                        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    }
    
    private void setupCustomersSearch() {
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(customersTbl.getModel());
        
        customersTbl.setRowSorter(rowSorter);
        
        searchCustomers.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = searchCustomers.getText();

                if (!text.equals("Search customers")) {
                    if (text.trim().length() == 0) {
                        rowSorter.setRowFilter(null);
                    } else {
                        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = searchCustomers.getText();

                if (!text.equals("Search customers")) {
                    if (text.trim().length() == 0) {
                        rowSorter.setRowFilter(null);
                    } else {
                        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    }
    
    public void addProduct(int id, String productName, int quantity, Blob picture) {
        if (productName == null) {
            productName = "Unnamed product";
        }
                
        var panel = new ProductPanel(
            this,
            id,
            productName,
            quantity,
            picture
        );
        
        products.add(panel);
        inventoryDisplayPanel.add(panel);
        
        inventoryDisplayPanel.repaint();
        inventoryDisplayPanel.revalidate();
    }
    
    public void removeProduct(int id) {
        for (var product : products) {
            if (product.getDatabaseId() == id) {
                /// Remove this brother.
                
                products.remove(product);
                inventoryDisplayPanel.remove(product);
                
                inventoryDisplayPanel.repaint();
                inventoryDisplayPanel.revalidate();
                
                break;
            }
        }
    }

    private void setupProducts() {
        try (var statement = Database.sqlConnection.createStatement()) {
            var query = "SELECT * FROM laes.products";
            var rs = statement.executeQuery(query);
            
            while (rs.next()) {
                var id = rs.getInt(1);
                var name = rs.getString(2); // Nullable
                var quantity = rs.getInt(3); // Nullable
                var picture = rs.getBlob(4); // Nullable
                
                if (name == null) {
                    name = "Unnamed product";
                }
                
                var panel = new ProductPanel(
                        this,
                        id,
                        name,
                        quantity,
                        picture
                );
                
        
                products.add(panel);
                inventoryDisplayPanel.add(panel);
            }
        } catch (SQLException exception) {
            System.out.println("SQL Failed! Error: " + exception.getMessage());
        }
    }
    
    private void setFirstPanel() {
        mainPnl.removeAll();
        mainPnl.add(reservationsPnl);
        mainPnl.repaint();
        mainPnl.revalidate();
    }

    private void customersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersBtnActionPerformed
        mainPnl.removeAll();
        mainPnl.add(customersPnl);
        mainPnl.repaint();
        mainPnl.revalidate();
    }//GEN-LAST:event_customersBtnActionPerformed

    private void inventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryBtnActionPerformed
        mainPnl.removeAll();
        mainPnl.add(inventoryPnl);
        mainPnl.repaint();
        mainPnl.revalidate();
    }//GEN-LAST:event_inventoryBtnActionPerformed

    private void aboutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutBtnActionPerformed
        mainPnl.removeAll();
        mainPnl.add(aboutPnl);
        mainPnl.repaint();
        mainPnl.revalidate();
    }//GEN-LAST:event_aboutBtnActionPerformed

    private void reservationsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationsBtnActionPerformed
        mainPnl.removeAll();
        mainPnl.add(reservationsPnl);
        mainPnl.repaint();
        mainPnl.revalidate();
    }//GEN-LAST:event_reservationsBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        this.setVisible(false);
        this.dispose();
        
        new LogIn().setVisible(true);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void addReservationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addReservationBtnActionPerformed
        NewReservation newReservation = new NewReservation(this);

        newReservation.setVisible(true);
    }//GEN-LAST:event_addReservationBtnActionPerformed

    private void searchReservationsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchReservationsFocusLost
        String searchValue = searchReservations.getText();

        if (searchValue.equals("")) {
            searchReservations.setText("Search reservations");
            searchReservations.setForeground(new Color(129, 129, 129));
        }
    }//GEN-LAST:event_searchReservationsFocusLost

    private void searchReservationsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchReservationsFocusGained
        String searchValue = searchReservations.getText();

        if (searchValue.equals("Search reservations")) {
            searchReservations.setText("");
            searchReservations.setForeground(new Color(35, 35, 35));
        }
    }//GEN-LAST:event_searchReservationsFocusGained

    private void searchCustomersFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchCustomersFocusGained
        String searchValue = searchCustomers.getText();

        if (searchValue.equals("Search customers")) {
            searchCustomers.setText("");
            searchCustomers.setForeground(new Color(35, 35, 35));
        }
    }//GEN-LAST:event_searchCustomersFocusGained

    private void searchCustomersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchCustomersFocusLost
        String searchValue = searchCustomers.getText();

        if (searchValue.equals("")) {
            searchCustomers.setText("Search customers");
            searchCustomers.setForeground(new Color(129, 129, 129));
        }
    }//GEN-LAST:event_searchCustomersFocusLost

    private void searchCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchCustomersActionPerformed

    private void searchInventoryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchInventoryFocusGained
        String searchValue = searchInventory.getText();

        if (searchValue.equals("Search inventory")) {
            searchInventory.setText("");
            searchInventory.setForeground(new Color(35, 35, 35));
        }
    }//GEN-LAST:event_searchInventoryFocusGained

    private void searchInventoryFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchInventoryFocusLost
        String searchValue = searchInventory.getText();

        if (searchValue.equals("")) {
            searchInventory.setText("Search inventory");
            searchInventory.setForeground(new Color(129, 129, 129));
        }
    }//GEN-LAST:event_searchInventoryFocusLost

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        NewInventoryItem newInventoryItem = new NewInventoryItem(this);
        
        newInventoryItem.setVisible(true);
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void reservationsTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservationsTblMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel) reservationsTbl.getModel();
        int selectedRows = reservationsTbl.getSelectedRow();
          
        String reservationId = RecordTable.getValueAt(selectedRows,0).toString();
        
        new ReservationDetails(this, reservationId).setVisible(true);
    }//GEN-LAST:event_reservationsTblMouseClicked

    private void inventoryScrollableAreaComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_inventoryScrollableAreaComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryScrollableAreaComponentShown
    
    private void inventoryScrollableAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryScrollableAreaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_inventoryScrollableAreaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("UIManager Exception : " + e);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutBtn;
    private javax.swing.JPanel aboutDesc;
    private javax.swing.JLabel aboutDescText;
    private javax.swing.JLabel aboutHead1;
    private javax.swing.JPanel aboutPnl;
    private javax.swing.JLabel aboutPrevimg1;
    private javax.swing.JLabel aboutPrevimg2;
    private javax.swing.JPanel aboutTitle;
    private javax.swing.JLabel aboutTitleLabel;
    private javax.swing.JLabel aboutTitleLabel1;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JButton addReservationBtn;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton customersBtn;
    private javax.swing.JPanel customersPnl;
    private javax.swing.JTable customersTbl;
    private javax.swing.JButton inventoryBtn;
    private javax.swing.JPanel inventoryDisplayPanel;
    private javax.swing.JPanel inventoryPnl;
    private javax.swing.JScrollPane inventoryScrollableArea;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JPanel mainPnl;
    private javax.swing.JButton reservationsBtn;
    private javax.swing.JPanel reservationsPnl;
    private javax.swing.JTable reservationsTbl;
    private javax.swing.JTextField searchCustomers;
    private javax.swing.JTextField searchInventory;
    private javax.swing.JTextField searchReservations;
    private javax.swing.JPanel sidePnl;
    private javax.swing.ButtonGroup tabsBtnGroup;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
