/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import classes.Database;
import java.sql.Blob;
import java.sql.SQLException;
import java.sql.Statement;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import utils.FontLoader;

/**
 *
 * @author vctrd
 */
public class NewInventoryItem extends javax.swing.JFrame {
    private final Main parent;
    private Blob pictureBlob;
    
    FontLoader fontLoader = new FontLoader();
    Font inter;
    Font puritanBold;

    /**
     * Creates new form NewInventoryItem
     * @param parent
     */
    public NewInventoryItem(Main parent) {
        this.parent = parent;
        
        setFonts();
        initComponents();
        setFrameIcon();
        
        addnewitempnl.requestFocus();
    }
    
    private void setFonts() {
        inter = fontLoader.interRegular(12);
        puritanBold = fontLoader.puritanBold(48);
    }
    
    private void setFrameIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../assets/logo.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addnewitempnl = new javax.swing.JPanel();
        newitem = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        itemname = new javax.swing.JTextField();
        savebutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        panel1 = new java.awt.Panel();
        imageLabel = new javax.swing.JLabel();
        hintLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add inventory item");

        addnewitempnl.setBackground(new java.awt.Color(255, 255, 255));
        addnewitempnl.setBorder(javax.swing.BorderFactory.createEmptyBorder(64, 64, 64, 64));

        newitem.setFont(puritanBold);
        newitem.setForeground(new java.awt.Color(35, 35, 35));
        newitem.setText("NEW ITEM");

        amount.setBackground(new java.awt.Color(248, 248, 248));
        amount.setFont(inter);
        amount.setForeground(new java.awt.Color(129, 129, 129));
        amount.setText("Amount");
        amount.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 218, 218)), javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16)));
        amount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                amountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                amountFocusLost(evt);
            }
        });

        itemname.setBackground(new java.awt.Color(248, 248, 248));
        itemname.setFont(inter);
        itemname.setForeground(new java.awt.Color(129, 129, 129));
        itemname.setText("Item name");
        itemname.setToolTipText("");
        itemname.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 218, 218)), javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16)));
        itemname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                itemnameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemnameFocusLost(evt);
            }
        });

        savebutton.setBackground(new java.awt.Color(40, 40, 40));
        savebutton.setFont(inter);
        savebutton.setForeground(new java.awt.Color(248, 248, 248));
        savebutton.setText("Save");
        savebutton.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        savebutton.setBorderPainted(false);
        savebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        savebutton.setFocusPainted(false);
        savebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebuttonActionPerformed(evt);
            }
        });

        deletebutton.setBackground(new java.awt.Color(248, 248, 248));
        deletebutton.setFont(inter);
        deletebutton.setForeground(new java.awt.Color(129, 129, 129));
        deletebutton.setText("Cancel");
        deletebutton.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        deletebutton.setBorderPainted(false);
        deletebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deletebutton.setFocusPainted(false);
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(248, 248, 248));
        panel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        panel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel1MouseClicked(evt);
            }
        });

        imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Camera.png"))); // NOI18N
        imageLabel.setMaximumSize(new java.awt.Dimension(96, 96));
        imageLabel.setMinimumSize(new java.awt.Dimension(96, 96));
        imageLabel.setPreferredSize(new java.awt.Dimension(96, 96));
        imageLabel.setHorizontalAlignment(SwingConstants.CENTER);

        hintLabel.setBackground(new java.awt.Color(225, 225, 225));
        hintLabel.setFont(inter);
        hintLabel.setForeground(new java.awt.Color(129, 129, 129));
        hintLabel.setText("Upload image");
        hintLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hintLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hintLabel)
                .addGap(274, 274, 274))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hintLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addnewitempnlLayout = new javax.swing.GroupLayout(addnewitempnl);
        addnewitempnl.setLayout(addnewitempnlLayout);
        addnewitempnlLayout.setHorizontalGroup(
            addnewitempnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addnewitempnlLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(addnewitempnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(newitem, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deletebutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addnewitempnlLayout.createSequentialGroup()
                        .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(savebutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        addnewitempnlLayout.setVerticalGroup(
            addnewitempnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addnewitempnlLayout.createSequentialGroup()
                .addComponent(newitem)
                .addGap(18, 18, 18)
                .addGroup(addnewitempnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savebutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletebutton)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addnewitempnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addnewitempnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void amountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFocusGained
        String contactValue = amount.getText();

        if (contactValue.equals("Amount")) {
            amount.setText("");
            amount.setForeground(new Color(35, 35, 35));
        }
    }//GEN-LAST:event_amountFocusGained

    private void amountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFocusLost
        String contactValue = amount.getText();

        if (contactValue.equals("")) {
            amount.setText("Amount");
            amount.setForeground(new Color(129, 129, 129));
        }
    }//GEN-LAST:event_amountFocusLost

    private void itemnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemnameFocusGained
        String nameValue = itemname.getText();

        if (nameValue.equals("Item name")) {
            itemname.setText("");
            itemname.setForeground(new Color(35, 35, 35));
        }
    }//GEN-LAST:event_itemnameFocusGained

    private void itemnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemnameFocusLost
        String nameValue = itemname.getText();

        if (nameValue.equals("")) {
            itemname.setText("Item name");
            itemname.setForeground(new Color(129, 129, 129));
        }
    }//GEN-LAST:event_itemnameFocusLost

    private void savebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebuttonActionPerformed
        /// Assume that we haven't added it yet, because I am lazy.

        var name = itemname.getText();
        var quantity = Integer.parseInt(amount.getText());
        var picture = pictureBlob;
                
        var query = "INSERT INTO laes.products (name, quantity, picture) " +
                    "VALUES (?, ?, ?)";
        try (var stmt = Database.sqlConnection.prepareStatement(query, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setString(1, name);
            stmt.setInt(2, quantity);
            stmt.setBlob(3, picture);
            stmt.executeUpdate();
                        
            try (var keys = stmt.getGeneratedKeys()) {
                if (keys.next()) {
                    var id = keys.getInt(1);
                    
                    System.out.println("Successfully saved item with id " + id + ".");
                    
                    parent.addProduct(id, name, quantity, picture);
                }
            }
            
            this.dispose();
        } catch (SQLException exception) {
            System.out.println("SQL Failed! Error: " + exception.getMessage());
        }
        System.out.println("Saved!");
    }//GEN-LAST:event_savebuttonActionPerformed
    
    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        this.dispose();
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void hintLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hintLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hintLabelMouseClicked

    private void panel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel1MouseClicked
        // TODO add your handling code here:
        
        var chooser = new JFileChooser();
        var filter = new FileNameExtensionFilter(
            "JPG, GIF & PNG Images", 
            "jpg", 
            "jpeg", 
            "gif",
            "png"
        );
        
        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        var f = chooser.getSelectedFile();
        if (f == null) {
            return;
        }
        
        var filename = f.getAbsolutePath();
        
        System.out.println("The filename is " + filename);
        SwingWorker sw = new SwingWorker() {
            private Blob blob;
            private byte[] bytes;
            
            @Override
            protected Object doInBackground() throws Exception {
//                Thread.sleep(5000);//simulate large image takes long to load
                var file = new File(filename);
                try (var fis = new FileInputStream(file)) {
                    var buffer = new byte[(int)file.length()];
                    fis.read(buffer);
                    
                    bytes = buffer;
                }
                        
                
                blob = Database.sqlConnection.createBlob();
                blob.setBytes(1, bytes);
                
                return null;
            }

            @Override
            protected void done() { 
                super.done();
                System.out.println("The bytes are: " + bytes.length);
                
                pictureBlob = blob;
                renderBlob();
            }
        };
        sw.execute();
    }//GEN-LAST:event_panel1MouseClicked
   
    private void renderBlob() {
        if (pictureBlob == null) {
            /// Since there is no image, we just let it be.
            
            imageLabel.setText("");
            imageLabel.setIcon(new ImageIcon(getClass().getResource("/assets/Camera.png")));
            hintLabel.setText("Upload image");
            
            return;
        }
        
        System.out.println("There is a blob!");
        
        try {
            byte[] bytes = pictureBlob.getBytes(1l, (int)pictureBlob.length());
            var imageIcon = new ImageIcon(bytes);
            var scaled = scaleImageIcon(imageIcon, 96, 96);
            
            imageLabel.setText("");
            imageLabel.setIcon(scaled);
            hintLabel.setText("Change image");
        } catch (SQLException exception) {
            System.out.println("SQL Failed! Error: " + exception.getMessage());
        }
    }
    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NewInventoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NewInventoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NewInventoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NewInventoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new NewInventoryItem().setVisible(true);
//            }
//        });
//    }

    
    
    private static ImageIcon scaleImageIcon(ImageIcon originalIcon, int width, int height) {
        Image originalImage = originalIcon.getImage();

        // Create a scaled image
        Image scaledImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);

        // Create a new ImageIcon from the scaled image
        return new ImageIcon(scaledImage);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addnewitempnl;
    private javax.swing.JTextField amount;
    private javax.swing.JButton deletebutton;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JTextField itemname;
    private javax.swing.JLabel newitem;
    private java.awt.Panel panel1;
    private javax.swing.JButton savebutton;
    // End of variables declaration//GEN-END:variables
}
